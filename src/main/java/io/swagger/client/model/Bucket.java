/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Bucket
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-21T16:32:46.492Z")
public class Bucket {
  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("hostname")
  private String hostname = null;

  @SerializedName("client")
  private String client = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("id")
  private String id = null;

  public Bucket created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * The creation datetime of the bucket
   * @return created
  **/
  @ApiModelProperty(required = true, value = "The creation datetime of the bucket")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public Bucket hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * The hostname of the client that the bucket belongs to
   * @return hostname
  **/
  @ApiModelProperty(required = true, value = "The hostname of the client that the bucket belongs to")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public Bucket client(String client) {
    this.client = client;
    return this;
  }

   /**
   * The name of the watcher client
   * @return client
  **/
  @ApiModelProperty(required = true, value = "The name of the watcher client")
  public String getClient() {
    return client;
  }

  public void setClient(String client) {
    this.client = client;
  }

  public Bucket name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The buckets readable and renameable name
   * @return name
  **/
  @ApiModelProperty(value = "The buckets readable and renameable name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Bucket type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The buckets event type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The buckets event type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Bucket id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The buckets unique id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The buckets unique id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Bucket bucket = (Bucket) o;
    return Objects.equals(this.created, bucket.created) &&
        Objects.equals(this.hostname, bucket.hostname) &&
        Objects.equals(this.client, bucket.client) &&
        Objects.equals(this.name, bucket.name) &&
        Objects.equals(this.type, bucket.type) &&
        Objects.equals(this.id, bucket.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, hostname, client, name, type, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Bucket {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

